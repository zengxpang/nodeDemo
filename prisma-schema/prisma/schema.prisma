// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../generated/docs"
}

generator json {
  provider = "node node_modules/prisma-json-schema-generator"
  output   = "../generated/json"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Test {
  id  Int    @id @default(autoincrement())
  aaa String @db.Text
  bbb Int    @map("bbb2") @db.TinyInt
  ccc String @unique @db.VarChar(50)

  @@index([bbb, ccc])
  @@map("test_test")
}

model Department {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(20)
  createTime DateTime   @default(now())
  updateTime DateTime   @updatedAt
  employees  Employee[]
}

model Employee {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(20)
  age          Int
  phone        String     @db.VarChar(30)
  departmentId Int
  // departmentId Int @unique // 多的一方添加唯一索引 就变成了一对一
  department   Department @relation(fields: [departmentId], references: [id]) // 多对一
}

model Post {
  id        Int          @id @default(autoincrement())
  title     String
  content   String?
  published Boolean      @default(false)
  tags      TagOnPosts[]
}

model Tag {
  id    Int          @id @default(autoincrement())
  name  String
  posts TagOnPosts[]
}

model TagOnPosts {
  postId Int
  post   Post @relation(fields: [postId], references: [id])

  tagId Int
  tag   Tag @relation(fields: [tagId], references: [id])

  @@id([postId, tagId]) // 多对多
}

enum DDD {
  AAA
  BBB
  CCC
}

model A {
  id   Int     @id @default(autoincrement())
  name String?
  role DDD     @default(CCC)
}
